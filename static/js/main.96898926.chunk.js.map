{"version":3,"sources":["assets/images/history.svg","assets/images/historyWhite.svg","assets/images/divide (1).svg","assets/images/minus-sign.svg","assets/images/plus-positive-add-mathematical-symbol.svg","assets/images/equal-mathematical-sign.svg","assets/images/multiply-mathematical-sign.svg","components/Calculator/Button.tsx","state/reducer.ts","functions/functions.ts","components/Calculator/Calculator.tsx","assets/images/moon.png","assets/images/sun.png","components/Switcher.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Calculator/Calculator.module.css","components/Switcher.module.css"],"names":["Button","value","setInput","img","isBLack","className","cn","s","buttonWhite","buttonBlack","onClick","undefined","alt","src","height","reducer","state","action","type","isCalculate","calculatingArr","number","input","result","isLastActionIsPercent","isLastActionIsOperation","length","inputArr","toString","parseFloat","lastSymbol","charAt","console","log","last","lastItem","operation","bracketsCorrector","push","lastEL","resultArr","map","el","i","find","item","splice","toFixed","history","inpt","getDataFromLocalStorage","localStorage","key","getItem","reverse","initialState","Calculator","isBlack","useReducer","dispatch","useState","isHistoryShowing","setHistoryVisible","useEffect","setItem","join","addNumber","addOperation","calculator","calculatorBlack","resultCont","Math","random","buttonCont","buttonContBlack","clear","divide","multiply","minus","plus","historyWhiteImg","historyImg","equals","Switcher","isBlackTheme","blackTheme","mid","rocker","rockerSmall","checked","onChange","event","currentTarget","switchLeft","moon","switchRight","style","sun","App","setBlackTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.96898926.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/history.aa0b2459.svg\";","export default __webpack_public_path__ + \"static/media/historyWhite.d9ada263.svg\";","export default __webpack_public_path__ + \"static/media/divide (1).193c79b5.svg\";","export default __webpack_public_path__ + \"static/media/minus-sign.25401b99.svg\";","export default __webpack_public_path__ + \"static/media/plus-positive-add-mathematical-symbol.d6249481.svg\";","export default __webpack_public_path__ + \"static/media/equal-mathematical-sign.4dd9e3c7.svg\";","export default __webpack_public_path__ + \"static/media/multiply-mathematical-sign.634334b9.svg\";","import React from \"react\";\nimport s from \"./Calculator.module.css\"\nimport cn from \"classnames\";\n\ninterface ButtonProps {\n    value:string,\n    setInput:(value:string)=>void,\n    img?:string,\n    isBLack: boolean\n}\n\nconst Button:React.FC<ButtonProps> = ({value, setInput, img, isBLack}) => {\n    return (\n       <>\n           <button className={cn(s.buttonWhite, {[s.buttonBlack]: isBLack})} onClick={() => setInput(value)}>{img ? undefined : value}\n           <img alt=\"\" src={img} height={18}/>\n           </button>\n       </>\n    )\n}\nexport default Button;","export interface State {\n    input: Array<string>,\n    calculatingArr: Array<string>,\n    isLastActionIsOperation: boolean,\n    isLastActionIsPercent: boolean,\n    result: number,\n    isCalculate: boolean,\n    history: Array<string | null>\n}\n\n\nexport type ActionTypes =\n    { type: \"operation\", operation: string }\n    | { type: \"calculate\" }\n    | { type: \"number\", number: string }\n    | { type: \"clear\" }\n    | { type: \"point\" }\n    | { type: \"reverse\" }\n    | { type: \"percent\" }\n    | { type: \"setHistory\", history: Array<string | null> };\n\nexport const reducer = (state: State, action: ActionTypes) => {\n    switch (action.type) {\n        case \"number\":\n            if (state.isCalculate) {\n                return {\n                    ...state,\n                    calculatingArr: [action.number],\n                    input: [action.number],\n                    isCalculate: false,\n                    result: 0\n                }\n            }\n            if (state.isLastActionIsPercent) {\n                return state\n            }\n            if (!state.isLastActionIsOperation) {\n                let calculatingArr: Array<string> = [...state.calculatingArr];\n                calculatingArr[calculatingArr.length - 1] = calculatingArr[calculatingArr.length - 1] + action.number;\n\n                let inputArr: Array<string> = [...state.input];\n                if (inputArr.length === 1 && inputArr[0] === \"0\") {\n                    inputArr = [\"\"];\n                }\n                inputArr[inputArr.length - 1] = inputArr[inputArr.length - 1] + action.number;\n                return {\n                    ...state,\n                    calculatingArr,\n                    isLastActionIsOperation: false,\n                    isCalculate: false,\n                    input: inputArr\n                }\n            }\n            return {\n                ...state,\n                calculatingArr: [...state.calculatingArr, action.number],\n                isLastActionIsOperation: false,\n                isCalculate: false,\n                input: [...state.input, action.number]\n            };\n        case \"reverse\":\n            if (state.isCalculate) {\n                if (state.result === 0) {\n                    return {\n                        ...state,\n                        result: 0\n                    }\n                }\n                return {\n                    ...state,\n                    calculatingArr: [(state.result * (-1)).toString()],\n                    input: [\"(\" + (state.result * (-1)).toString() + \")\"],\n                    isCalculate: false,\n                    result: 0\n                }\n            }\n            if (!state.isLastActionIsOperation && (state.calculatingArr.length === 1 ? state.calculatingArr[0] !== \"\" : true)) {\n                let calculatingArr: Array<string> = [...state.calculatingArr];\n                calculatingArr[calculatingArr.length - 1] = (parseFloat(calculatingArr[calculatingArr.length - 1]) * (-1)).toString();\n\n                let input = [...state.input];\n                input[input.length - 1] = \"(\" + calculatingArr[calculatingArr.length - 1];\n                return {\n                    ...state,\n                    calculatingArr,\n                    input\n                }\n            }\n            return {\n                ...state,\n                calculatingArr: [...state.calculatingArr],\n                input: [...state.input]\n            };\n        case \"point\":\n            let lastSymbol = state.calculatingArr[state.calculatingArr.length - 1];\n            if (!state.isLastActionIsOperation && (state.calculatingArr.length > 0) && (lastSymbol.charAt(lastSymbol.length - 1) !== \".\") && !state.isCalculate) {\n                console.log(state.calculatingArr[state.calculatingArr.length - 1])\n                let calculatingArr: Array<string> = [...state.calculatingArr];\n                calculatingArr[calculatingArr.length - 1] = calculatingArr[calculatingArr.length - 1] + \".\";\n\n                let inputArr: Array<string> = [...state.input];\n                inputArr[inputArr.length - 1] = inputArr[inputArr.length - 1] + \".\";\n                return {\n                    ...state,\n                    calculatingArr,\n                    isLastActionIsOperation: false,\n                    input: inputArr\n                }\n            }\n            return state;\n        case \"percent\":\n            let last = state.calculatingArr[state.calculatingArr.length - 1];\n            if (state.isCalculate) {\n                return {\n                    ...state,\n                    calculatingArr: [state.result.toString(), \"%\"],\n                    input: [state.result.toString() + \"%\"],\n                    isCalculate: false,\n                    result: 0,\n                    isLastActionIsPercent: true\n                }\n            }\n            if (last !== (\"+\") && last !== \"-\" && last !== \"x\" && last !== \"/\" && last.charAt(last.length - 1) !== \".\" && last !== \"%\") {\n                let input: Array<string> = [...state.input];\n                input[input.length - 1] = input[input.length - 1] + \"%\";\n                return {\n                    ...state,\n                    calculatingArr: [...state.calculatingArr, \"%\"],\n                    input: input,\n                    isLastActionIsPercent: true\n                }\n            }\n            return state\n        case \"operation\":\n            let lastItem = state.calculatingArr[state.calculatingArr.length - 1];\n            if (state.isCalculate) {\n                return {\n                    ...state,\n                    calculatingArr: [state.result.toString(), action.operation],\n                    input: [state.result.toString(), action.operation],\n                    isLastActionIsOperation: true,\n                    isCalculate: false,\n                    result: 0\n                }\n            }\n            if (lastItem !== (\"+\") && lastItem !== \"-\" && lastItem !== \"x\" && lastItem !== \"/\" && lastItem.charAt(lastItem.length - 1) !== \".\") {\n\n                let input = bracketsCorrector([...state.input]);\n\n                input.push(action.operation);\n                return {\n                    ...state,\n                    calculatingArr: [...state.calculatingArr, action.operation],\n                    isLastActionIsOperation: true,\n                    isLastActionIsPercent: false,\n                    input\n                }\n            }\n            return state\n        case \"calculate\":\n            let lastEL = state.calculatingArr[state.calculatingArr.length - 1];\n            if (lastEL === (\"+\") || lastEL === \"-\" || lastEL === \"x\" || lastEL === \"/\" || lastEL.charAt(lastEL.length - 1) === \".\" || state.isCalculate) {\n                return state\n            }\n            let resultArr = state.calculatingArr.map(el => el);\n            let result = 0;\n            let i = 0;\n            let input = bracketsCorrector([...state.input]);\n            console.log(resultArr)\n            if (resultArr.length !== 1) {\n                while (resultArr.length !== 1) {\n                    if (resultArr.find(item => item === \"%\")) {\n                        while (resultArr.find(item => item === \"%\")) {\n                            if (resultArr[i] === \"%\") {\n                                if (resultArr[i - 2] === \"x\") {\n                                    result = (parseFloat(resultArr[i - 1]) * parseFloat(resultArr[i - 3])) / 100;\n                                    resultArr.splice(i - 3, 4, result.toString());\n                                }\n                                else if (resultArr[i - 2] === \"/\") {\n                                    result = (parseFloat(resultArr[i - 3])) / (parseFloat(resultArr[i - 1])/100);\n                                    resultArr.splice(i - 3, 4, result.toString());\n                                }\n                                else if (resultArr[i - 2] === \"+\") {\n                                    result = (parseFloat(resultArr[i - 1]) * parseFloat(resultArr[i - 3])) / 100 + parseFloat(resultArr[i - 3]);\n                                    resultArr.splice(i - 3, 4, result.toString());\n                                } else if (resultArr[i - 2] === \"-\") {\n                                    result = parseFloat(resultArr[i - 3]) - (parseFloat(resultArr[i - 1]) * parseFloat(resultArr[i - 3])) / 100;\n                                    resultArr.splice(i - 3, 4, result.toString());\n                                }\n                                else if (resultArr.length === 2 || i===1) {\n                                    result = parseFloat(resultArr[i - 1]) / 100;\n                                    resultArr.splice(i - 1, 2, result.toString());\n                                }\n                                i = -1;\n                            }\n                            i++;\n                        }\n                        i = 0;\n                    }\n                    if (resultArr.find(item => item === \"x\" || item === \"/\")) {\n                        while (resultArr.find(item => item === \"x\" || item === \"/\")) {\n                            if (resultArr[i] === \"/\") {\n                                result = parseFloat(resultArr[i - 1]) / parseFloat(resultArr[i + 1]);\n                                resultArr.splice(i - 1, 3, result.toString());\n                                i = -1;\n                            }\n                            if (resultArr[i] === \"x\") {\n                                result = parseFloat(resultArr[i - 1]) * parseFloat(resultArr[i + 1]);\n                                resultArr.splice(i - 1, 3, result.toString());\n                                i = -1;\n                            }\n                            i++\n                        }\n                        i = 0;\n                    }\n\n                    if (resultArr[i] === \"+\") {\n                        result = parseFloat(resultArr[i - 1]) + parseFloat(resultArr[i + 1]);\n                        resultArr.splice(i - 1, 3, result.toString());\n                        i = -1;\n                    }\n                    if (resultArr[i] === \"-\") {\n                        result = parseFloat(resultArr[i - 1]) - parseFloat(resultArr[i + 1]);\n                        resultArr.splice(i - 1, 3, result.toFixed(1).toString());\n                        i = -1;\n                    }\n                    i++\n                }\n            }\n            return {\n                ...state,\n                result,\n                input: [...input, \"=\", result.toString()],\n                isCalculate: true,\n                isLastActionIsPercent: false\n            }\n        case \"setHistory\":\n            return {\n                ...state,\n                history: action.history\n            }\n        case \"clear\":\n            return {\n                ...state,\n                input: [\"0\"],\n                calculatingArr: [\"\"],\n                isLastActionIsOperation: false,\n                isLastActionIsPercent: false,\n                result: 0\n            }\n        default:\n            return state;\n    }\n}\nconst bracketsCorrector = (inpt: Array<string>): Array<string> => {\n    let input = [...inpt];\n    if (input[input.length - 1].charAt(0) === \"(\" && input[input.length - 1].charAt(input[input.length - 1].length - 1) !== \")\") {\n        input[input.length - 1] = input[input.length - 1] + \")\";\n    }\n    return input\n\n}","export const getDataFromLocalStorage = ():Array<string | null> => {\n    let history:Array<string | null> = [];\n\n        for (let i = 0; i < localStorage.length; i++) {\n            let key:string|null = localStorage.key(i);\n            if (key !== null) {\n                history.push(localStorage.getItem(key));\n            }\n        }\n    return history.reverse();\n}","import React, {useEffect, useReducer, useState} from \"react\";\nimport cn from \"classnames\";\nimport s from \"./Calculator.module.css\";\nimport historyImg from \"../../assets/images/history.svg\";\nimport historyWhiteImg from \"../../assets/images/historyWhite.svg\";\nimport divide from \"../../assets/images/divide (1).svg\";\nimport minus from \"../../assets/images/minus-sign.svg\";\nimport plus from \"../../assets/images/plus-positive-add-mathematical-symbol.svg\";\nimport equals from \"../../assets/images/equal-mathematical-sign.svg\";\nimport multiply from \"../../assets/images/multiply-mathematical-sign.svg\";\nimport Button from \"./Button\";\nimport {ActionTypes, reducer, State} from \"../../state/reducer\";\nimport {getDataFromLocalStorage} from \"../../functions/functions\";\n\nlet initialState: State = {\n    input: [\"0\"],\n    calculatingArr: [\"\"],\n    isLastActionIsOperation: false,\n    isLastActionIsPercent: false,\n    result: 0,\n    isCalculate: false,\n    history: []\n}\ninterface Props {\n    isBlack:boolean\n}\nconst Calculator: React.FC<Props> = ({isBlack}) => {\n    type Reducer<State, ActionTypes> = (state: State, action: ActionTypes) => State;\n\n    const [state, dispatch] = useReducer<Reducer<State, ActionTypes>>(reducer, initialState);\n    const [isHistoryShowing, setHistoryVisible] = useState(false);\n\n\n    useEffect(() => {\n        if(state.isCalculate) {\n            localStorage.setItem(`operation${localStorage.length + 1}`, (state.input.join(\" \")));\n            let history:Array<string | null> = getDataFromLocalStorage();\n            dispatch({type:\"setHistory\", history});\n        }\n    },[state.isCalculate])\n\n\n    const clear = () => {\n        dispatch({type: \"clear\"});\n    }\n\n    const addNumber = (number: string) => {\n        dispatch({type: \"number\", number})\n    };\n    const addPoint = () => {\n        dispatch({type: \"point\"})\n    };\n    const addOperation = (operation: string) => {\n        dispatch({type: \"operation\", operation});\n    };\n    const addPercent = () => {\n        dispatch({type: \"percent\"});\n    }\n    const calculate = (): void => {\n        dispatch({type: \"calculate\"});\n    }\n    const showHistory = () => {\n        let history:Array<string | null> = getDataFromLocalStorage();\n        dispatch({type:\"setHistory\", history});\n        setHistoryVisible(true)\n    }\n    const reverse = (): void => {\n        dispatch({type: \"reverse\"})\n    }\n    const clearHistory = () => {\n        localStorage.clear();\n        setHistoryVisible(false);\n    }\n    const secArr = [\"4\", \"5\", \"6\"];\n    const firstArr = [\"7\", \"8\", \"9\"];\n    const thirdArr = [\"1\", \"2\", \"3\"];\n\n    return (\n        <div className={cn(s.calculator, {[s.calculatorBlack]:isBlack})}>\n            <div className={s.resultCont}>\n                {isHistoryShowing && <div className={s.history}>\n                    {state.history.map(item => <span key={Math.random()}>{item}</span>)}\n                </div>}\n                <div className={s.result}>\n                    {state.input.join(\" \")}\n                    {/* {showResult && <span>={state.result.toFixed(1)}</span>}*/}\n                </div>\n\n            </div>\n            <div className={cn(s.buttonCont,{[s.buttonContBlack]:isBlack} )}>\n                {!(state.input.length === 1 && state.input[0] === \"0\") ? <Button value={\"C\"} setInput={clear}  isBLack={isBlack}/> :\n                    <Button value={\"AC\"} setInput={clearHistory} isBLack={isBlack}/>}\n                <Button value={\"+/-\"} setInput={reverse} isBLack={isBlack}/>\n                <Button value={\"%\"} setInput={addPercent} isBLack={isBlack}/>\n                <Button value={\"/\"} setInput={addOperation} img={divide} isBLack={isBlack}/>\n            </div>\n            <div className={s.buttonCont}>\n                {firstArr.map(el => <Button value={el} setInput={addNumber} key={el} isBLack={isBlack}/>)}\n                <Button value={\"x\"} setInput={addOperation} img={multiply} isBLack={isBlack}/>\n            </div>\n            <div className={s.buttonCont}>\n                {secArr.map(el => <Button value={el} setInput={addNumber} key={el} isBLack={isBlack}/>)}\n                <Button value={\"-\"} setInput={addOperation} img={minus} isBLack={isBlack}/>\n            </div>\n            <div className={s.buttonCont}>\n                {thirdArr.map(el => <Button value={el} setInput={addNumber} key={el} isBLack={isBlack}/>)}\n                <Button value={\"+\"} setInput={addOperation} img={plus} isBLack={isBlack}/>\n            </div>\n            <div className={s.buttonCont}>\n                <Button value={\"0\"} setInput={addNumber} isBLack={isBlack}/>\n                <button className={cn(s.buttonWhite, {[s.buttonBlack]: isBlack})} onClick={isHistoryShowing ? ()=> setHistoryVisible(false) : showHistory}>\n                    <img src={isBlack? historyWhiteImg : historyImg} alt=\"\" height={20}/>\n                </button>\n                <Button value={\".\"} setInput={addPoint} isBLack={isBlack}/>\n                <Button value={\"=\"} setInput={calculate} img={equals} isBLack={isBlack}/>\n            </div>\n        </div>\n    );\n};\nexport default Calculator;","export default __webpack_public_path__ + \"static/media/moon.f0c2c2be.png\";","export default __webpack_public_path__ + \"static/media/sun.00d03aa8.png\";","import s from \"./Switcher.module.css\";\n\nimport cn from \"classnames\";\nimport moon from \"../assets/images/moon.png\";\nimport sun from \"../assets/images/sun.png\";\nimport React from \"react\";\n\ninterface Props {\n    isBlackTheme: (checked:boolean)=> void;\n    blackTheme:boolean;\n}\n\nconst Switcher:React.FC<Props> = ({isBlackTheme,blackTheme}) => {\n    return (\n        <div className={s.mid}>\n            <label\n                className={cn(s.rocker, s.rockerSmall)}>\n                <input type=\"checkbox\" checked={blackTheme} onChange={event => {\n                    isBlackTheme(event.currentTarget.checked)\n                }}></input>\n                <span className={s.switchLeft}><img src={moon} alt=\"\"/></span>\n                <span className={s.switchRight}><img style={{height: \"20px\"}} src={sun} alt=\"\"/></span>\n            </label>\n        </div>\n    )\n}\nexport default Switcher;","import React, {useState} from 'react';\nimport './App.css';\nimport Calculator from \"./components/Calculator/Calculator\";\nimport Switcher from \"./components/Switcher\";\n\nconst App = () => {\n    const [isBlack, setBlackTheme] = useState(false);\n        return (\n            <div className={isBlack? \"AppBlack\" : \"App\"}>\n                <div className=\"app-wrapper\">\n                  <Calculator isBlack={isBlack} />\n                  <Switcher isBlackTheme={setBlackTheme} blackTheme={isBlack} />\n                </div>\n            </div>\n        );\n    }\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculator\":\"Calculator_calculator__12KaN\",\"calculatorBlack\":\"Calculator_calculatorBlack__hKoCa\",\"resultCont\":\"Calculator_resultCont__1VevZ\",\"result\":\"Calculator_result__13t74\",\"history\":\"Calculator_history__19Lf_\",\"buttonCont\":\"Calculator_buttonCont__1jdCr\",\"buttonWhite\":\"Calculator_buttonWhite__1MHr2\",\"buttonBlack\":\"Calculator_buttonBlack__3EJlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mid\":\"Switcher_mid__3HSxw\",\"rocker\":\"Switcher_rocker__1XdpH\",\"rockerSmall\":\"Switcher_rockerSmall__39Ngv\",\"switchLeft\":\"Switcher_switchLeft__1Krzy\",\"switchRight\":\"Switcher_switchRight__2SAfM\"};"],"sourceRoot":""}